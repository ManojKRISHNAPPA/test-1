pipeline {
    agent any

    tools {
        jdk 'java-17'
        maven 'maven'
    }

    stages {
        stage('Git checkout') {
            steps {
                git branch: 'TEST-1', url: 'https://github.com/prathikmr7/test-1.git'
            }
        }
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Code Scan') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=http://43.205.241.39:9000/'
                }
            }
        }
        stage('Build and Tag') {
            steps {
                sh 'docker build -t prathikmr/webapp:1 .'
            }
        }
        stage('Docker Image Scan') {
            steps {
                sh 'trivy image --format table -o trivy-image-report.html prathikmr/webapp:1'
            }
        }
        stage('Containerization') {
            steps {
                script {
                    sh '''
                        docker stop c1 || true
                        docker rm c1 || true
                        docker run -it -d --name c1 -p 9001:8080 prathikmr/webapp:1
                    '''
                }
            }
        }
        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                }
            }
        }
        stage('Pushing Image to Repository') {
            steps {
                sh 'docker push prathikmr/webapp:1'
            }
        }
    }
}
